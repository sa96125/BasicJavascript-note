function sortBubble(arr) {
    for (let i = arr.length; i > 0; i--) {
        for (let j = 0; j < i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                let temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
    return arr;
}//--------------------------------------------------------------------------------------------------> 시간복잡도 O(n**2)

//*********************************************************************************************************************
//*                                           R E F A C T O R I N G                                                   *
//*********************************************************************************************************************
//최악의 경우는 이미 거의 정렬된 데이터를 정렬하는 경우이다.
//쓸때 없는 연산을 줄어 조금이라도 time complexity를 줄여보자.

function sortBubble(arr) {
    for (let i = arr.length; i > 0; i--) {
        var noSwap = true;
        for (let j = 0; j < i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                let temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
                noSwap = false;
            }
        }
        //모든 경우마다 값의 비교가 일어난다는 버블정렬에 특성을 이용하여
        //더이상 정렬될 값이 없으면 루프탈출
        if (noSwap) break;
    }
    return arr;
}//--------------------------------------------------------------------------------------------------> 시간복잡도 O(n**2)


